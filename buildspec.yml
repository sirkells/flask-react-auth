version: 0.2

env:
  variables:
    AWS_REGION: "eu-central-1"
    REACT_APP_USERS_SERVICE_URL: "http://flask-react-alb-2053538243.eu-central-1.elb.amazonaws.com"

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo logging in to ecr...
      - $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - |
        if expr "$CODEBUILD_WEBHOOK_TRIGGER" == "branch/master" >/inte/null  && expr "$CODEBUILD_WEBHOOK_HEAD_REF" == "refs/heads/master" >/inte/null; then
          DOCKER_TAG=prod
        else
          DOCKER_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
        fi
      # new
      - echo "Docker tag:" $DOCKER_TAG
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-users:$DOCKER_TAG || true # updated
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:$DOCKER_TAG || true # updated
    #   - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-users:prod || true
    #   - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:builder || true
    #   - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:prod || true
  build:
    commands:
      - echo building and testing inte images...
      - docker-compose up -d --build
      - docker-compose exec -T users python -m pytest "app/tests" -p no:warnings --cov="app"
      - docker-compose exec -T users flake8 app
      - docker-compose exec -T users black app --check
      # - docker-compose exec -T users /bin/sh -c "isort app/*/*.py --check-only"
      - docker-compose exec -T client npm run lint
      - docker-compose exec -T client npm run prettier:check
      - docker-compose exec -T client npm run prettier:write
      - echo building prod images...
      - >
        docker build \
            --cache-from $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-users:$DOCKER_TAG  \
            -f services/users/Dockerfile.prod \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-users:$DOCKER_TAG  \
            ./services/users

      - >
        docker build \
            -f services/client/Dockerfile.prod \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:prod \
            --build-arg NODE_ENV=production \
            --build-arg REACT_APP_USERS_SERVICE_URL=$REACT_APP_USERS_SERVICE_URL \
            ./services/client
      - >
        docker build \
            --cache-from $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:$DOCKER_TAG  \
            -f services/client/Dockerfile.prod \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:$DOCKER_TAG  \
            ./services/client
  post_build:
    commands:
      - echo pushing prod images to ecr...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-users:$DOCKER_TAG

      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/test-driven-client:$DOCKER_TAG
      - chmod +x ./deploy.sh
      - bash deploy.sh
